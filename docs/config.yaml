# REQUIRED: knobs related to the source config
source_config:
  # REQUIRED: source config repo URL to build
  url: https://github.com/jlebon/my-coreos
  # OPTIONAL: source config ref to build
  # Supports '${STREAM}' variable.
  ref: release-${STREAM}
  # OPTIONAL: git repo URL for yumrepos
  yumrepos: https://gitlab.example.com/sooper/seekret

# OPTIONAL: default artifacts to build per architecture
default_artifacts:
  # default artifacts on all arches
  all:
    - metal
    - metal4k
    - live
  aarch64:
    - openstack
  x86_64:
    - aws
    - vmware

# OPTIONAL: hotfix-related keys
hotfix:
  # REQUIRED: name for hotfix used to tag pushed resources
  name: art1234
  # OPTIONAL/TEMPORARY: skip all tests that require a signed kernel
  skip_secureboot_tests_hack: true

# OPTIONAL/TEMPORARY: hacks-related keys
hacks:
  # OPTIONAL: skip upgrade kola tests
  skip_upgrade_tests: true
  # OPTIONAL: skip calling plume in the release job
  skip_plume_release_task: true
  # OPTIONAL: skip UEFI on older RHCOS
  skip_uefi_tests_on_older_rhcos: true

# OPTIONAL/TEMPORARY: whether to use `versionary` to derive version numbers
versionary_hack: true

# OPTIONAL: coreos-assembler image to build with. Supports ${STREAM} variable.
# If unset, defaults to `quay.io/coreos-assembler/coreos-assembler:main`.
cosa_img: quay.io/jlebon/coreos-assembler:pr3139-${STREAM}

# REQUIRED: streams to build
streams:
    testing-devel:
      # REQUIRED: stream type
      # Three kinds of streams are supported:
      # - development: lockfiles, auto-bumping, auto-triggering
      # - production: lockfiles, no auto-bumping, no auto-triggering
      # - mechanical: no lockfiles, auto-triggering
      type: development
      # OPTIONAL: set a stream as the default one
      # This will be the default stream for jobs that take a 'STREAMS' parameter
      default: true
      # OPTIONAL: override source config ref to use for this stream
      source_config_ref: main
    stable:
      type: production
      # OPTIONAL: override cosa image to use for this stream
      cosa_image: "quay.io/jlebon/coreos-assembler:stable"
      # OPTIONAL: skip some of the default artifacts for this stream
      skip_artifacts:
        aarch64:
          - openstack
        x86_64:
          - vmware
      # OPTIONAL: stream-specific container repos to push to
      additional_registry_repos:
        oscontainer_old: registry.ci.openshift.org/rhcos-devel/machine-os-oci-content
        legacy_oscontainer_old: registry.ci.openshift.org/rhcos-devel/machine-os-content
      # OPTIONAL: override default coreos-assembler image to build with
      cosa_img: quay.io/coreos-assembler/coreos-assembler:stable
      # OPTIONAL/TEMPORARY: Override default coreos-assembler image to use for
      # the controller pod in the build-arch job. This is only useful when
      # building with a cosa too old to support `cosa remote-session`, which
      # should only be the case for RHCOS 4.11 and older.
      cosa_controller_img_hack: quay.io/coreos-assembler/coreos-assembler:latest
    rawhide:
      type: mechanical

# REQUIRED: architectures to build for other than x86_64
additional_arches: [aarch64, ppc64le, s390x]

# OPTIONAL: S3 bucket and key to which to upload build artifacts. For reference,
# the builds.json file will be located at
# `${s3.bucket}/${s3.builds_key}/builds/builds.json`.
s3:
  # REQUIRED: S3 bucket name
  bucket: rhcos-jlebon
  # OPTIONAL: S3 bucket subkey. Supports `${STREAM}` variable.
  builds_key: "streams/${STREAM}"

# OPTIONAL: container registry-related keys
registry_repos:
  # OPTIONAL: repo to which to push oscontainer
  oscontainer: quay.io/fedora/fedora-coreos
  # OPTIONAL/TEMPORARY: additional repo to which to push oscontainer
  oscontainer_old: quay.io/coreos-assembler/fcos
  # OPTIONAL: repo to which to push legacy oscontainer
  legacy_oscontainer: quay.io/openshift-release-dev/rhel-coreos-dev
  # OPTIONAL/TEMPORARY: additional repo to which to push oscontainer
  legacy_oscontainer_old: registry.ci.openshift.org/rhcos/rhel-coreos
  # OPTIONAL: repo to which to push the extensions container
  extensions: quay.io/openshift-release-dev/rhel-coreos-extensions-dev
  # OPTIONAL: whether to also tag images with build ID
  add_build_tag: true
  # OPTIONAL: whether to push in v2s2 format rather than OCI
  v2s2: true

# OPTIONAL/TEMPORARY: enable AWS aarch64 hack; see comment in `build-arch.Jenkinsfile`.
aws_aarch64_serial_console_hack: true

# OPTIONAL: cloud-related knobs
clouds:
  aws:
    # OPTIONAL: accounts to share newly created AMIs with
    test_accounts:
      - "1234567890"
    # REQUIRED (if AWS build upload credentials provided): the region to do
    # initial image creation in.
    primary_region: us-east-1
    # REQUIRED (if AWS build upload credentials provided): the bucket+prefix
    # where image files are uploaded to then initiate an image import.
    bucket: fedora-coreos-image-uploads/ami-import
    # OPTIONAL: boolean: whether or not to set the image/snapshot as public
    public: true
    # OPTIONAL: list of architectures to limit cloud testing to.
    test_architectures: [x86_64]
    # REQUIRED (if AWS GovCloud image upload credentials provided):
    # separate set of data for GovCloud uploads
    govcloud:
      # OPTIONAL: accounts to share newly created AMIs with
      test_accounts:
        - "1234567890"
      # REQUIRED: the region to do initial image creation in.
      primary_region: us-gov-east-1
      # REQUIRED: the bucket+prefix where image files are uploaded to then initiate an image import.
      bucket: fedora-coreos-govcloud-image-uploads/ami-import
      # OPTIONAL: boolean: whether or not to set the image/snapshot as public
      public: true
  aliyun:
    # REQUIRED (if Aliyun build upload credentials provided): the region to do
    # initial image creation in.
    primary_region: us-east-1
    # REQUIRED (if Aliyun image upload credentials provided): the bucket+prefix
    # where image files are uploaded to then initiate an image import.
    bucket: fedora-coreos-image-uploads/ami-import
    # OPTIONAL: boolean: whether or not to set the image/snapshot as public
    public: true
    # OPTIONAL: list of architectures to limit cloud testing to.
    test_architectures: [x86_64]
  azure:
    # REQUIRED (if Azure image upload credentials provided): resource group, storage
    # account, and storage container to use for image file uploads
    resource_group: fedora-coreos
    storage_account: fedoracoreos
    storage_container: fedora-coreos-image-blobs
    # REQUIRED (if Azure kola test credentials provided): resource group, storage
    # account, and storage container to use for kola tests
    test_resource_group: fedora-coreos-testing
    test_storage_account: fedoracoreostesting
    test_storage_container: fedora-coreos-testing-image-blobs
    # OPTIONAL: list of architectures to limit cloud testing to.
    test_architectures: [x86_64]
  gcp:
    # REQUIRED (if GCP image upload credentials provided): the bucket+prefix
    # where image files are uploaded to then initiate an image import.
    bucket: fedora-coreos-cloud-image-uploads/image-import
    # OPTIONAL: A description to add to the image. The given string can have ${STREAM},
    # ${BUILDID}, ${BASEARCH}, and ${DATE} substituted for values at runtime.
    description: "Fedora, Fedora CoreOS ${STREAM}, ${BUILDID}, ${BASEARCH} published on ${DATE}"
    # OPTIONAL: boolean: whether or not to set the image as public
    public: true
    # OPTIONAL: create the image in the specified image family. It will be created in
    # the deprecated state. It can then be undeprecated in the release job.
    family: "fedora-coreos-${STREAM}"
    # OPTIONAL: licenses to add to the image on creation. The given string can have ${STREAM}
    # substituted with the actual stream at runtime.
    licenses:
      - "fedora-coreos-${STREAM}"
      - "https://compute.googleapis.com/compute/v1/projects/vm-options/global/licenses/enable-vmx"
    # OPTIONAL: list of architectures to limit cloud testing to.
    test_architectures: [x86_64]
  openstack:
    # OPTIONAL: list of architectures to limit cloud testing to.
    test_architectures: [x86_64, aarch64]
  powervs:
    # REQUIRED (if POWERVS image upload credentials provided): the object storage
    # service instance to use.
    cloud_object_storage_service_instance: fedora-coreos-cos-service-instance
    # REQUIRED (if POWERVS image upload credentials provided): the object storage
    # service instance to use.
    primary_region: us-east
    # REQUIRED (if POWERVS image upload credentials provided): the bucket to use.
    # This bucket string is actually a prefix. The region will get added to it as
    # a suffix. If replication occurs other buckets in other regions will get
    # uploaded to. i.e. "fedora-coreos-image-uploads-us-east", "fedora-coreos-image-uploads-ca-tor"
    bucket: fedora-coreos-image-uploads
    # REQUIRED (if POWERVS image upload credentials provided): the regions list
    # where image files are uploaded. TODO: We need to validate if these regions are really required,
    # or if we can auto-detect them, as we do for the other clouds.
  regions:
      - us-east
      - au-syd
      - br-sao
      - ca-tor
      - eu-de
      - eu-gb
      - jp-osa
      - jp-tok
      - us-south
