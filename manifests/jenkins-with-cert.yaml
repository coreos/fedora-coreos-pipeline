# This template is always required to create the jenkins and jenkins-agent-base
# ImageStreams with the new tags that will be used later.
# doesn't actually need to be a template (there are no parameters), but the way
# `deploy` currently works expects it as a template.

apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: jenkins-with-cert
labels:
  app: coreos-pipeline
  template: coreos-pipeline-jenkins-with-cert-template
objects:
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: jenkins-with-cert
    spec:
      source:
        dockerfile: |
          FROM overridden
          COPY cert/data /etc/pki/ca-trust/source/anchors/root-ca.crt
          USER root
          RUN if grep -q 'dummy' /etc/pki/ca-trust/source/anchors/root-ca.crt; then \
              rm /etc/pki/ca-trust/source/anchors/root-ca.crt; \
          else \
              update-ca-trust; \
          fi
          # restore previous user ID
          # https://github.com/openshift/jenkins/blob/7bae76f4412d28c18ed2b33aaf73306734b7f6d5/2/Dockerfile.rhel8#L107
          USER 1001
        secrets:
          - destinationDir: cert
            secret:
              name: additional-root-ca-cert
      strategy:
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: jenkins:upstream
          forcePull: true
      output:
        to:
          kind: ImageStreamTag
          name: jenkins:withcert
      successfulBuildsHistoryLimit: 2
      failedBuildsHistoryLimit: 2
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChange: {}
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: jenkins-agent-base-with-cert
    spec:
      source:
        dockerfile: |
          FROM overridden
          COPY cert/data /etc/pki/ca-trust/source/anchors/root-ca.crt
          RUN if grep -q 'dummy' /etc/pki/ca-trust/source/anchors/root-ca.crt; then \
              rm /etc/pki/ca-trust/source/anchors/root-ca.crt; \
          else \
              update-ca-trust; \
          fi
        secrets:
          - destinationDir: cert
            secret:
              name: additional-root-ca-cert
      strategy:
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: jenkins-agent-base:upstream
          forcePull: true
      output:
        to:
          kind: ImageStreamTag
          name: jenkins-agent-base:latest
      successfulBuildsHistoryLimit: 2
      failedBuildsHistoryLimit: 2
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChange: {}
