apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: jenkins-s2i
labels:
  app: coreos-pipeline
  template: coreos-pipeline-jenkins-s2i-template
parameters:
  - description: Git source URI for Jenkins S2I
    name: JENKINS_S2I_URL
    value: https://github.com/coreos/fedora-coreos-pipeline
  - description: Git branch/tag reference for Jenkins S2I
    name: JENKINS_S2I_REF
    value: main
  - description: Source imagestream
    name: JENKINS_S2I_SRC_IMAGESTREAM_NAME
    value: jenkins:2
  - description: Namespace of source imagestream
    name: JENKINS_S2I_SRC_IMAGESTREAM_NAMESPACE
    value: openshift

# Here's what the flow looks like when no cert is required:
#
# ┌─────────────────────┐   ┌─────────────┐   ┌─────────────┐
# │ imagestream         │   │ buildconfig │   │ imagestream │
# │ openshift/jenkins:2 ├──►│ jenkins-s2i ├──►│ jenkins:2   │
# └─────────────────────┘   └─────────────┘   └─────────────┘
#
# ┌─────────────────────────────────────┐
# │ imagestream                         │
# │ openshift/jenkins-agent-base:latest │
# └─────────────────────────────────────┘
#
# And with cert required (see `jenkins-with-cert.yaml`):
#
# ┌─────────────────────┐   ┌───────────────────┐   ┌────────────────┐   ┌─────────────┐   ┌─────────────┐
# │ imagestream         │   │ buildconfig       │   │ imagestream    │   │ buildconfig │   │ imagestream │
# │ openshift/jenkins:2 ├──►│ jenkins-with-cert ├──►│ jenkins:latest ├──►│ jenkins-s2i ├──►│ jenkins:2   │
# └─────────────────────┘   └───────────────────┘   └────────────────┘   └─────────────┘   └─────────────┘
#
# ┌─────────────────────────────────────┐   ┌──────────────────────────────┐   ┌───────────────────────────┐
# │ imagestream                         │   │ buildconfig                  │   │ imagestream               │
# │ openshift/jenkins-agent-base:latest ├──►│ jenkins-agent-base-with-cert ├──►│ jenkins-agent-base:latest │
# └─────────────────────────────────────┘   └──────────────────────────────┘   └───────────────────────────┘

objects:

  ### JENKINS CONTROLLER ###

  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: jenkins
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: jenkins-s2i
    # Note no triggers: we don't want e.g. git pushes/config changes to restart
    # Jenkins. Let's just require manual restarts here. XXX: Should investigate
    # if there's an easy way to auto-redeploy during downtimes.
    spec:
      source:
        type: Git
        git:
          uri: ${JENKINS_S2I_URL}
          ref: ${JENKINS_S2I_REF}
        contextDir: jenkins/controller
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: ${JENKINS_S2I_SRC_IMAGESTREAM_NAME}
            namespace: ${JENKINS_S2I_SRC_IMAGESTREAM_NAMESPACE}
          env:
            - name: JENKINS_UC_DOWNLOAD
              value: 'https://archives.jenkins.io'
          forcePull: true
      output:
        to:
          kind: ImageStreamTag
          name: jenkins:2
      successfulBuildsHistoryLimit: 2
      failedBuildsHistoryLimit: 2

  ### JENKINS AGENT ###

  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: jenkins-agent-base
