apiVersion: v1
kind: Template
labels:
  app: fedora-coreos
  template: fedora-coreos-template
metadata:
  annotations:
    description: |-
      Jenkins pipeline for Fedora CoreOS.
    iconClass: icon-jenkins
    openshift.io/display-name: Fedora CoreOS Pipeline
    openshift.io/documentation-url: https://github.com/coreos/fedora-coreos-pipeline
    openshift.io/support-url: https://github.com/coreos/fedora-coreos-pipeline
    openshift.io/provider-display-name: Fedora CoreOS
    tags: fcos,jenkins,fedora
  name: fedora-coreos
parameters:
  - description: Git source URI for Jenkinsfile
    name: REPO_URL
    value: https://github.com/coreos/fedora-coreos-pipeline
  - description: Git branch/tag reference for Jenkinsfile
    name: REPO_REF
    value: master
  - description: Size of the PVC to create
    name: PVC_SIZE
    value: 100Gi
objects:

  ### JENKINS MASTER ###

  # use our own "gated" imagestream for the Jenkins master so we can test new
  # images before upgrading
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: jenkins-s2i
      namespace: fedora-coreos
    spec:
      tags:
        - name: stable
          from:
            kind: DockerImage
            # 2.138.2
            name: docker.io/openshift/jenkins-2-centos7@sha256:fd48b67ed2eca6c4042ac59dd3efd6763681bbc312b5f0c2a3adbfbd71f3c5ce
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: jenkins
      namespace: fedora-coreos
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: fedora-coreos-jenkins
    # Note no triggers: we don't want e.g. git pushes/config changes to restart
    # Jenkins. Let's just require manual restarts here. XXX: Should investigate if
    # there's an easy way to auto-redeploy during downtimes.
    spec:
      source:
        type: Git
        git:
          uri: ${REPO_URL}
          ref: ${REPO_REF}
        contextDir: jenkins/master
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: jenkins-s2i:stable
          forcePull: true
      output:
        to:
          kind: ImageStreamTag
          name: jenkins:latest
          namespace: fedora-coreos
      successfulBuildsHistoryLimit: 2
      failedBuildsHistoryLimit: 2

  ### JENKINS SLAVE ###

  # keep a local copy of the Jenkins slave image so we're not constantly pulling
  # it each time from docker.io
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: jenkins-slave-base-centos7
      namespace: fedora-coreos
    spec:
      lookupPolicy:
        # this allows e.g. the pipeline to directly reference the imagestream
        local: true
      tags:
        - name: latest
          from:
            kind: DockerImage
            # target :latest for now
            name: docker.io/openshift/jenkins-slave-base-centos7:latest
          importPolicy:
            scheduled: true

  ### COREOS-ASSEMBLER ###

  # keep a local copy of coreos-assembler so we're not constantly pulling it
  # each time from quay.io
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: coreos-assembler
      namespace: fedora-coreos
    spec:
      lookupPolicy:
        # this allows e.g. the pipeline to directly reference the imagestream
        local: true
      tags:
        - name: master
          from:
            kind: DockerImage
            # for now we just follow :master, but we may start freezing if
            # things become too unstable
            name: quay.io/coreos-assembler/coreos-assembler:master
          importPolicy:
            scheduled: true

  ### PVC ###

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: coreos-assembler-claim2
      namespace: fedora-coreos
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${PVC_SIZE}

  ### FEDORA COREOS BUILD PIPELINE ###

  - kind: BuildConfig
    apiVersion: "build.openshift.io/v1"
    metadata:
      name: "fedora-coreos-pipeline"
    spec:
      # Define triggers.
      #   - trigger on buildconfig change
      #   - trigger on imagestream change
      #   - trigger on GitHub webhook
      #   - trigger on Generic webhook (for fedmsg triggered actions)
      triggers:
      - type: ConfigChange
      # use `oc set triggers --from-github` to update token to be unique
      - type: GitHub
        github:
          secret: regenerate
      # use `oc set triggers --from-webook` to update token to be unique
      - type: Generic
        generic:
          secret: regenerate
      - type: imageChange
        imageChange:
          from:
            kind: ImageStreamTag
            name: coreos-assembler:master
      source:
        type: Git
        git:
          uri: ${REPO_URL}
          ref: ${REPO_REF}
      strategy:
        jenkinsPipelineStrategy:
          type: JenkinsPipeline
          jenkinsfilePath: Jenkinsfile
